{
  "address": "0xE02B778a801658aaC5E0524B3E2647926DbCe092",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fundingId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "CardFundingFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fundingId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "paymentReference",
          "type": "string"
        }
      ],
      "name": "CardFundingInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fundingId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "cardType",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "transactionHash",
          "type": "string"
        }
      ],
      "name": "CardFundingSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cardFundings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fundingId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ghsAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "cardType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "paymentReference",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "transactionHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isProcessed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ghsAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "cardType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "paymentReference",
          "type": "string"
        }
      ],
      "name": "fundCard",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fundingId",
          "type": "uint256"
        }
      ],
      "name": "getCardFunding",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "fundingId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ghsAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "cardType",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "paymentReference",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "transactionHash",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isProcessed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct PaymentContract.CardFunding",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "paymentReference",
          "type": "string"
        }
      ],
      "name": "getCardFundingByReference",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "fundingId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ghsAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "cardType",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "paymentReference",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "transactionHash",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isProcessed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct PaymentContract.CardFunding",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isProcessed",
          "type": "bool"
        }
      ],
      "name": "getCardFundingsByStatus",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFundingLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minimumAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximumAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalCardFundings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserCardFundings",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fundingId",
          "type": "uint256"
        }
      ],
      "name": "isCardFundingProcessed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumFundingAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumFundingAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextFundingId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "paymentReferenceToFundingId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maximumAmount",
          "type": "uint256"
        }
      ],
      "name": "setFundingLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userFundings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe803b3f9e504ca80d96a5cb5d14f979b666f6f4d8bcaf211e02f79a95ba79353",
  "receipt": {
    "to": null,
    "from": "0x6D3D7d820660c8075147Edbd820f5e85A1e459a9",
    "contractAddress": "0xE02B778a801658aaC5E0524B3E2647926DbCe092",
    "transactionIndex": 13,
    "gasUsed": "1906465",
    "logsBloom": "0x
    "blockHash": "0x0869a68fa050452cb4d41816f85258029e1ed3249d81cdd1f45ade6c4d89fa51",
    "transactionHash": "0xe803b3f9e504ca80d96a5cb5d14f979b666f6f4d8bcaf211e02f79a95ba79353",
    "logs": [
      {
        "transactionIndex": 13,
        "blockNumber": 30692565,
        "transactionHash": "0xe803b3f9e504ca80d96a5cb5d14f979b666f6f4d8bcaf211e02f79a95ba79353",
        "address": "0xE02B778a801658aaC5E0524B3E2647926DbCe092",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006d3d7d820660c8075147edbd820f5e85a1e459a9"
        ],
        "data": "0x",
        "logIndex": 111,
        "blockHash": "0x0869a68fa050452cb4d41816f85258029e1ed3249d81cdd1f45ade6c4d89fa51"
      },
      {
        "transactionIndex": 13,
        "blockNumber": 30692565,
        "transactionHash": "0xe803b3f9e504ca80d96a5cb5d14f979b666f6f4d8bcaf211e02f79a95ba79353",
        "address": "0xE02B778a801658aaC5E0524B3E2647926DbCe092",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000006d3d7d820660c8075147edbd820f5e85a1e459a9",
          "0x0000000000000000000000006d3d7d820660c8075147edbd820f5e85a1e459a9"
        ],
        "data": "0x",
        "logIndex": 112,
        "blockHash": "0x0869a68fa050452cb4d41816f85258029e1ed3249d81cdd1f45ade6c4d89fa51"
      }
    ],
    "blockNumber": 30692565,
    "cumulativeGasUsed": "5312264",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6D3D7d820660c8075147Edbd820f5e85A1e459a9"
  ],
  "numDeployments": 1,
  "solcInputHash": "7c8aed727d8d80d43dff8a8a1c5bc114",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fundingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"CardFundingFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fundingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"paymentReference\",\"type\":\"string\"}],\"name\":\"CardFundingInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fundingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cardType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"transactionHash\",\"type\":\"string\"}],\"name\":\"CardFundingSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cardFundings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fundingId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ghsAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cardType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"paymentReference\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"transactionHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isProcessed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ghsAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cardType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"paymentReference\",\"type\":\"string\"}],\"name\":\"fundCard\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundingId\",\"type\":\"uint256\"}],\"name\":\"getCardFunding\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fundingId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ghsAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cardType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"paymentReference\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"transactionHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isProcessed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct PaymentContract.CardFunding\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"paymentReference\",\"type\":\"string\"}],\"name\":\"getCardFundingByReference\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fundingId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ghsAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cardType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"paymentReference\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"transactionHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isProcessed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct PaymentContract.CardFunding\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isProcessed\",\"type\":\"bool\"}],\"name\":\"getCardFundingsByStatus\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFundingLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalCardFundings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserCardFundings\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundingId\",\"type\":\"uint256\"}],\"name\":\"isCardFundingProcessed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumFundingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumFundingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextFundingId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"paymentReferenceToFundingId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maximumAmount\",\"type\":\"uint256\"}],\"name\":\"setFundingLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userFundings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"MorphCash Team\",\"kind\":\"dev\",\"methods\":{\"emergencyWithdraw()\":{\"details\":\"Emergency withdraw all funds (owner only)\"},\"fundCard(uint256,string,string)\":{\"details\":\"Fund a virtual card with ETH payment This function is called when a user wants to fund their virtual card The payment is processed immediately and events are emitted for frontend handling\",\"params\":{\"cardType\":\"Type of card (Visa, Mastercard, etc.)\",\"ghsAmount\":\"Amount in GHS (for reference)\",\"paymentReference\":\"Payment reference for tracking\"}},\"getCardFunding(uint256)\":{\"details\":\"Get card funding details by ID\",\"params\":{\"fundingId\":\"The funding ID\"},\"returns\":{\"_0\":\"The card funding data\"}},\"getCardFundingByReference(string)\":{\"details\":\"Get card funding by reference\",\"params\":{\"paymentReference\":\"The payment reference\"},\"returns\":{\"_0\":\"The card funding data\"}},\"getCardFundingsByStatus(bool)\":{\"details\":\"Get card fundings by processed status\",\"params\":{\"isProcessed\":\"Whether to filter by processed status\"},\"returns\":{\"_0\":\"Array of funding IDs matching the criteria\"}},\"getContractBalance()\":{\"details\":\"Get contract balance\",\"returns\":{\"_0\":\"The contract's ETH balance\"}},\"getFundingLimits()\":{\"details\":\"Get funding limits\",\"returns\":{\"maximumAmount\":\"The maximum funding amount\",\"minimumAmount\":\"The minimum funding amount\"}},\"getTotalCardFundings()\":{\"details\":\"Get total number of card fundings\",\"returns\":{\"_0\":\"The total number of fundings\"}},\"getUserCardFundings(address)\":{\"details\":\"Get all card fundings for a user\",\"params\":{\"userAddress\":\"The user's address\"},\"returns\":{\"_0\":\"Array of funding IDs\"}},\"isCardFundingProcessed(uint256)\":{\"details\":\"Check if a card funding is processed\",\"params\":{\"fundingId\":\"The funding ID\"},\"returns\":{\"_0\":\"True if processed, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFundingLimits(uint256,uint256)\":{\"details\":\"Set minimum and maximum funding amounts (owner only)\",\"params\":{\"_maximumAmount\":\"Maximum funding amount in wei\",\"_minimumAmount\":\"Minimum funding amount in wei\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"Withdraw contract balance (owner only)\",\"params\":{\"amount\":\"Amount to withdraw in wei\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"PaymentContract - Blockchain Payment Processing for Card Funding Handles ETH payments from ENS/connected wallets via Coinbase integration Emits events for frontend to handle Supabase card creation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PaymentContract.sol\":\"PaymentContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/PaymentContract.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\n/**\\r\\n * PaymentContract - Blockchain Payment Processing for Card Funding\\r\\n * Handles ETH payments from ENS/connected wallets via Coinbase integration\\r\\n * Emits events for frontend to handle Supabase card creation\\r\\n * @author MorphCash Team\\r\\n */\\r\\ncontract PaymentContract is Ownable, ReentrancyGuard {\\r\\n    // Card Funding Struct\\r\\n    struct CardFunding {\\r\\n        uint256 fundingId;\\r\\n        address user;\\r\\n        uint256 amount; // Amount in wei (ETH)\\r\\n        uint256 ghsAmount; // Amount in GHS (for reference)\\r\\n        string cardType; // Visa, Mastercard, etc.\\r\\n        string paymentReference;\\r\\n        string transactionHash;\\r\\n        bool isProcessed;\\r\\n        uint256 createdAt;\\r\\n    }\\r\\n\\r\\n    // State Variables\\r\\n    address public immutable contractOwner;\\r\\n    uint256 public minimumFundingAmount = 0.001 ether; // Minimum 0.001 ETH\\r\\n    uint256 public maximumFundingAmount = 10 ether; // Maximum 10 ETH\\r\\n    \\r\\n    // Mappings\\r\\n    mapping(uint256 => CardFunding) public cardFundings;\\r\\n    mapping(string => uint256) public paymentReferenceToFundingId;\\r\\n    mapping(address => uint256[]) public userFundings;\\r\\n    \\r\\n    // Arrays\\r\\n    uint256 public nextFundingId = 1;\\r\\n\\r\\n    // Events\\r\\n    event CardFundingInitiated(uint256 indexed fundingId, address indexed user, uint256 amount, string paymentReference);\\r\\n    event CardFundingSuccess(uint256 indexed fundingId, address indexed user, uint256 amount, string cardType, string transactionHash);\\r\\n    event CardFundingFailed(uint256 indexed fundingId, address indexed user, string reason);\\r\\n\\r\\n    // Constructor\\r\\n    constructor(address _owner) {\\r\\n        contractOwner = _owner;\\r\\n        _transferOwnership(_owner);\\r\\n    }\\r\\n\\r\\n    // Modifier\\r\\n    modifier isOwner() {\\r\\n        require(msg.sender == contractOwner, \\\"Not the Owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Fund a virtual card with ETH payment\\r\\n     * This function is called when a user wants to fund their virtual card\\r\\n     * The payment is processed immediately and events are emitted for frontend handling\\r\\n     * @param ghsAmount Amount in GHS (for reference)\\r\\n     * @param cardType Type of card (Visa, Mastercard, etc.)\\r\\n     * @param paymentReference Payment reference for tracking\\r\\n     */\\r\\n    function fundCard(\\r\\n        uint256 ghsAmount,\\r\\n        string memory cardType,\\r\\n        string memory paymentReference\\r\\n    ) external payable nonReentrant {\\r\\n        require(msg.value >= minimumFundingAmount, \\\"Amount below minimum\\\");\\r\\n        require(msg.value <= maximumFundingAmount, \\\"Amount above maximum\\\");\\r\\n        require(bytes(paymentReference).length > 0, \\\"Reference cannot be empty\\\");\\r\\n        require(paymentReferenceToFundingId[paymentReference] == 0, \\\"Reference already exists\\\");\\r\\n        require(bytes(cardType).length > 0, \\\"Card type cannot be empty\\\");\\r\\n        \\r\\n        uint256 fundingId = nextFundingId++;\\r\\n        \\r\\n        CardFunding memory newFunding = CardFunding({\\r\\n            fundingId: fundingId,\\r\\n            user: msg.sender,\\r\\n            amount: msg.value,\\r\\n            ghsAmount: ghsAmount,\\r\\n            cardType: cardType,\\r\\n            paymentReference: paymentReference,\\r\\n            transactionHash: \\\"\\\",\\r\\n            isProcessed: false,\\r\\n            createdAt: block.timestamp\\r\\n        });\\r\\n        \\r\\n        cardFundings[fundingId] = newFunding;\\r\\n        paymentReferenceToFundingId[paymentReference] = fundingId;\\r\\n        userFundings[msg.sender].push(fundingId);\\r\\n        \\r\\n        emit CardFundingInitiated(fundingId, msg.sender, msg.value, paymentReference);\\r\\n        \\r\\n        // Process the funding immediately and emit success event\\r\\n        _processCardFunding(fundingId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to process card funding\\r\\n     * @param fundingId The funding ID to process\\r\\n     */\\r\\n    function _processCardFunding(uint256 fundingId) internal {\\r\\n        CardFunding storage funding = cardFundings[fundingId];\\r\\n        require(funding.fundingId != 0, \\\"Funding does not exist\\\");\\r\\n        require(!funding.isProcessed, \\\"Funding already processed\\\");\\r\\n        \\r\\n        // Set transaction hash (in a real implementation, this would come from the actual transaction)\\r\\n        funding.transactionHash = _generateTransactionHash(fundingId);\\r\\n        funding.isProcessed = true;\\r\\n        \\r\\n        emit CardFundingSuccess(fundingId, funding.user, funding.amount, funding.cardType, funding.transactionHash);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Generate a transaction hash for the funding\\r\\n     * In a real implementation, this would be the actual transaction hash\\r\\n     * @param fundingId The funding ID\\r\\n     * @return A generated transaction hash\\r\\n     */\\r\\n    function _generateTransactionHash(uint256 fundingId) internal view returns (string memory) {\\r\\n        return string(abi.encodePacked(\\r\\n            \\\"0x\\\",\\r\\n            _toHexString(block.timestamp),\\r\\n            _toHexString(fundingId),\\r\\n            _toHexString(uint256(uint160(msg.sender)))\\r\\n        ));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Convert uint256 to hex string\\r\\n     * @param value The value to convert\\r\\n     * @return The hex string representation\\r\\n     */\\r\\n    function _toHexString(uint256 value) internal pure returns (string memory) {\\r\\n        if (value == 0) {\\r\\n            return \\\"0\\\";\\r\\n        }\\r\\n        uint256 temp = value;\\r\\n        uint256 digits;\\r\\n        while (temp != 0) {\\r\\n            digits++;\\r\\n            temp >>= 4;\\r\\n        }\\r\\n        bytes memory buffer = new bytes(digits);\\r\\n        for (uint256 i = digits; i > 0; i--) {\\r\\n            buffer[i - 1] = bytes16(\\\"0123456789abcdef\\\")[value & 0xf];\\r\\n            value >>= 4;\\r\\n        }\\r\\n        return string(buffer);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Set minimum and maximum funding amounts (owner only)\\r\\n     * @param _minimumAmount Minimum funding amount in wei\\r\\n     * @param _maximumAmount Maximum funding amount in wei\\r\\n     */\\r\\n    function setFundingLimits(uint256 _minimumAmount, uint256 _maximumAmount) external isOwner {\\r\\n        require(_minimumAmount > 0, \\\"Minimum amount must be greater than 0\\\");\\r\\n        require(_maximumAmount > _minimumAmount, \\\"Maximum must be greater than minimum\\\");\\r\\n        \\r\\n        minimumFundingAmount = _minimumAmount;\\r\\n        maximumFundingAmount = _maximumAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Withdraw contract balance (owner only)\\r\\n     * @param amount Amount to withdraw in wei\\r\\n     */\\r\\n    function withdraw(uint256 amount) external isOwner {\\r\\n        require(amount <= address(this).balance, \\\"Insufficient balance\\\");\\r\\n        require(amount > 0, \\\"Amount must be greater than 0\\\");\\r\\n        \\r\\n        payable(contractOwner).transfer(amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Emergency withdraw all funds (owner only)\\r\\n     */\\r\\n    function emergencyWithdraw() external isOwner {\\r\\n        uint256 balance = address(this).balance;\\r\\n        require(balance > 0, \\\"No funds to withdraw\\\");\\r\\n        \\r\\n        payable(contractOwner).transfer(balance);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get card funding details by ID\\r\\n     * @param fundingId The funding ID\\r\\n     * @return The card funding data\\r\\n     */\\r\\n    function getCardFunding(uint256 fundingId) external view returns (CardFunding memory) {\\r\\n        require(cardFundings[fundingId].fundingId != 0, \\\"Funding does not exist\\\");\\r\\n        return cardFundings[fundingId];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get card funding by reference\\r\\n     * @param paymentReference The payment reference\\r\\n     * @return The card funding data\\r\\n     */\\r\\n    function getCardFundingByReference(string memory paymentReference) external view returns (CardFunding memory) {\\r\\n        uint256 fundingId = paymentReferenceToFundingId[paymentReference];\\r\\n        require(fundingId != 0, \\\"Funding not found\\\");\\r\\n        return cardFundings[fundingId];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get all card fundings for a user\\r\\n     * @param userAddress The user's address\\r\\n     * @return Array of funding IDs\\r\\n     */\\r\\n    function getUserCardFundings(address userAddress) external view returns (uint256[] memory) {\\r\\n        return userFundings[userAddress];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Check if a card funding is processed\\r\\n     * @param fundingId The funding ID\\r\\n     * @return True if processed, false otherwise\\r\\n     */\\r\\n    function isCardFundingProcessed(uint256 fundingId) external view returns (bool) {\\r\\n        require(cardFundings[fundingId].fundingId != 0, \\\"Funding does not exist\\\");\\r\\n        return cardFundings[fundingId].isProcessed;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get total number of card fundings\\r\\n     * @return The total number of fundings\\r\\n     */\\r\\n    function getTotalCardFundings() external view returns (uint256) {\\r\\n        return nextFundingId - 1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get card fundings by processed status\\r\\n     * @param isProcessed Whether to filter by processed status\\r\\n     * @return Array of funding IDs matching the criteria\\r\\n     */\\r\\n    function getCardFundingsByStatus(bool isProcessed) external view returns (uint256[] memory) {\\r\\n        uint256[] memory matchingFundings = new uint256[](nextFundingId - 1);\\r\\n        uint256 count = 0;\\r\\n        \\r\\n        for (uint256 i = 1; i < nextFundingId; i++) {\\r\\n            if (cardFundings[i].isProcessed == isProcessed) {\\r\\n                matchingFundings[count] = i;\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        // Resize array to actual count\\r\\n        uint256[] memory result = new uint256[](count);\\r\\n        for (uint256 i = 0; i < count; i++) {\\r\\n            result[i] = matchingFundings[i];\\r\\n        }\\r\\n        \\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get contract balance\\r\\n     * @return The contract's ETH balance\\r\\n     */\\r\\n    function getContractBalance() external view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get funding limits\\r\\n     * @return minimumAmount The minimum funding amount\\r\\n     * @return maximumAmount The maximum funding amount\\r\\n     */\\r\\n    function getFundingLimits() external view returns (uint256 minimumAmount, uint256 maximumAmount) {\\r\\n        return (minimumFundingAmount, maximumFundingAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function that allows the contract to receive ETH\\r\\n     */\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x28c6004ed13c5fb5e7a60e2d32d7c65a344c6d3462dcc99afbd56a8dc453b64b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101395760003560e01c8063799d1320116100ab578063cf2118d11161006f578063cf2118d11461036f578063d2730cc9146103a4578063db2e21bc146103d1578063e094d300146103e6578063f2fde38b14610406578063f90118d31461042657600080fd5b8063799d13201461029e5780638c2365ff146102be5780638da5cb5b146102d1578063a00237ef14610303578063ce606ee01461033b57600080fd5b80633eae5cb3116100fd5780633eae5cb3146101f25780635225317c146102225780636f102353146102385780636f9fb98a14610260578063715018a614610273578063783c8db01461028857600080fd5b806323d7396a146101455780632e1a7d4d1461016e5780633648f024146101905780633716a6bd146101b057806337d83763146101dd57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5061015b60075481565b6040519081526020015b60405180910390f35b34801561017a57600080fd5b5061018e610189366004611806565b610446565b005b34801561019c57600080fd5b5061018e6101ab36600461181f565b610588565b3480156101bc57600080fd5b506101d06101cb36600461185d565b610694565b604051610165919061187f565b3480156101e957600080fd5b5061015b610700565b3480156101fe57600080fd5b5061021261020d366004611806565b610716565b6040519015158152602001610165565b34801561022e57600080fd5b5061015b60035481565b34801561024457600080fd5b5060025460035460408051928352602083019190915201610165565b34801561026c57600080fd5b504761015b565b34801561027f57600080fd5b5061018e61075c565b34801561029457600080fd5b5061015b60025481565b3480156102aa57600080fd5b506101d06102b93660046118c3565b610770565b61018e6102cc366004611988565b6108da565b3480156102dd57600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610165565b34801561030f57600080fd5b5061015b61031e3660046119f5565b805160208183018101805160058252928201919093012091525481565b34801561034757600080fd5b506102eb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561037b57600080fd5b5061038f61038a366004611806565b610c32565b60405161016599989796959493929190611a82565b3480156103b057600080fd5b506103c46103bf3660046119f5565b610e21565b6040516101659190611af8565b3480156103dd57600080fd5b5061018e6110b8565b3480156103f257600080fd5b5061015b610401366004611bb5565b611145565b34801561041257600080fd5b5061018e61042136600461185d565b611176565b34801561043257600080fd5b506103c4610441366004611806565b6111ef565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104975760405162461bcd60e51b815260040161048e90611bdf565b60405180910390fd5b478111156104de5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161048e565b6000811161052e5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161048e565b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083906000818181858888f19350505050158015610584573d6000803e3d6000fd5b5050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105d05760405162461bcd60e51b815260040161048e90611bdf565b6000821161062e5760405162461bcd60e51b815260206004820152602560248201527f4d696e696d756d20616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b606482015260840161048e565b8181116106895760405162461bcd60e51b8152602060048201526024808201527f4d6178696d756d206d7573742062652067726561746572207468616e206d696e604482015263696d756d60e01b606482015260840161048e565b600291909155600355565b6001600160a01b0381166000908152600660209081526040918290208054835181840281018401909452808452606093928301828280156106f457602002820191906000526020600020905b8154815260200190600101908083116106e0575b50505050509050919050565b600060016007546107119190611c1c565b905090565b60008181526004602052604081205481036107435760405162461bcd60e51b815260040161048e90611c35565b5060009081526004602052604090206007015460ff1690565b61076461144b565b61076e60006114a5565b565b6060600060016007546107839190611c1c565b67ffffffffffffffff81111561079b5761079b6118e5565b6040519080825280602002602001820160405280156107c4578160200160208202803683370190505b509050600060015b6007548110156108355760008181526004602052604090206007015485151560ff909116151503610823578083838151811061080a5761080a611c65565b60209081029190910101528161081f81611c7b565b9250505b8061082d81611c7b565b9150506107cc565b5060008167ffffffffffffffff811115610851576108516118e5565b60405190808252806020026020018201604052801561087a578160200160208202803683370190505b50905060005b828110156108d15783818151811061089a5761089a611c65565b60200260200101518282815181106108b4576108b4611c65565b6020908102919091010152806108c981611c7b565b915050610880565b50949350505050565b6108e26114f5565b60025434101561092b5760405162461bcd60e51b8152602060048201526014602482015273416d6f756e742062656c6f77206d696e696d756d60601b604482015260640161048e565b6003543411156109745760405162461bcd60e51b8152602060048201526014602482015273416d6f756e742061626f7665206d6178696d756d60601b604482015260640161048e565b60008151116109c55760405162461bcd60e51b815260206004820152601960248201527f5265666572656e63652063616e6e6f7420626520656d70747900000000000000604482015260640161048e565b6005816040516109d59190611c94565b908152602001604051809103902054600014610a335760405162461bcd60e51b815260206004820152601860248201527f5265666572656e636520616c7265616479206578697374730000000000000000604482015260640161048e565b6000825111610a845760405162461bcd60e51b815260206004820152601960248201527f4361726420747970652063616e6e6f7420626520656d70747900000000000000604482015260640161048e565b6007805460009182610a9583611c7b565b90915550604080516101208101825282815233602080830191825234838501908152606084018a8152608085018a815260a086018a905286518085018852600080825260c088019190915260e0870181905242610100880152888152600494859052969096208551815593516001850180546001600160a01b0319166001600160a01b0390921691909117905590516002840155516003830155925193945090928392820190610b459082611d38565b5060a08201516005820190610b5a9082611d38565b5060c08201516006820190610b6f9082611d38565b5060e082015160078201805460ff1916911515919091179055610100909101516008909101556040518290600590610ba8908690611c94565b908152604080519182900360209081018320939093553360008181526006855291822080546001810182559083529390912090920184905583907fc58d91fa11e20e75e64181e97d8b288f82bb3a3a94f111b2d6a0ddea0226e2c590610c119034908890611df8565b60405180910390a3610c228261154e565b5050610c2d60018055565b505050565b60046020819052600091825260409091208054600182015460028301546003840154948401805493956001600160a01b03909316949193610c7290611cb0565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9e90611cb0565b8015610ceb5780601f10610cc057610100808354040283529160200191610ceb565b820191906000526020600020905b815481529060010190602001808311610cce57829003601f168201915b505050505090806005018054610d0090611cb0565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2c90611cb0565b8015610d795780601f10610d4e57610100808354040283529160200191610d79565b820191906000526020600020905b815481529060010190602001808311610d5c57829003601f168201915b505050505090806006018054610d8e90611cb0565b80601f0160208091040260200160405190810160405280929190818152602001828054610dba90611cb0565b8015610e075780601f10610ddc57610100808354040283529160200191610e07565b820191906000526020600020905b815481529060010190602001808311610dea57829003601f168201915b505050506007830154600890930154919260ff1691905089565b610e296117af565b6000600583604051610e3b9190611c94565b908152602001604051809103902054905080600003610e905760405162461bcd60e51b8152602060048201526011602482015270119d5b991a5b99c81b9bdd08199bdd5b99607a1b604482015260640161048e565b6000818152600460208181526040928390208351610120810185528154815260018201546001600160a01b031692810192909252600281015493820193909352600383015460608201529082018054919291608084019190610ef190611cb0565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1d90611cb0565b8015610f6a5780601f10610f3f57610100808354040283529160200191610f6a565b820191906000526020600020905b815481529060010190602001808311610f4d57829003601f168201915b50505050508152602001600582018054610f8390611cb0565b80601f0160208091040260200160405190810160405280929190818152602001828054610faf90611cb0565b8015610ffc5780601f10610fd157610100808354040283529160200191610ffc565b820191906000526020600020905b815481529060010190602001808311610fdf57829003601f168201915b5050505050815260200160068201805461101590611cb0565b80601f016020809104026020016040519081016040528092919081815260200182805461104190611cb0565b801561108e5780601f106110635761010080835404028352916020019161108e565b820191906000526020600020905b81548152906001019060200180831161107157829003601f168201915b5050509183525050600782015460ff16151560208201526008909101546040909101529392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111005760405162461bcd60e51b815260040161048e90611bdf565b478061052e5760405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b604482015260640161048e565b6006602052816000526040600020818154811061116157600080fd5b90600052602060002001600091509150505481565b61117e61144b565b6001600160a01b0381166111e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048e565b6111ec816114a5565b50565b6111f76117af565b60008281526004602052604081205490036112245760405162461bcd60e51b815260040161048e90611c35565b6000828152600460208181526040928390208351610120810185528154815260018201546001600160a01b03169281019290925260028101549382019390935260038301546060820152908201805491929160808401919061128590611cb0565b80601f01602080910402602001604051908101604052809291908181526020018280546112b190611cb0565b80156112fe5780601f106112d3576101008083540402835291602001916112fe565b820191906000526020600020905b8154815290600101906020018083116112e157829003601f168201915b5050505050815260200160058201805461131790611cb0565b80601f016020809104026020016040519081016040528092919081815260200182805461134390611cb0565b80156113905780601f1061136557610100808354040283529160200191611390565b820191906000526020600020905b81548152906001019060200180831161137357829003601f168201915b505050505081526020016006820180546113a990611cb0565b80601f01602080910402602001604051908101604052809291908181526020018280546113d590611cb0565b80156114225780601f106113f757610100808354040283529160200191611422565b820191906000526020600020905b81548152906001019060200180831161140557829003601f168201915b5050509183525050600782015460ff161515602082015260089091015460409091015292915050565b6000546001600160a01b0316331461076e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002600154036115475760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161048e565b6002600155565b6000818152600460205260408120805490910361157d5760405162461bcd60e51b815260040161048e90611c35565b600781015460ff16156115d25760405162461bcd60e51b815260206004820152601960248201527f46756e64696e6720616c72656164792070726f63657373656400000000000000604482015260640161048e565b6115db82611658565b60068201906115ea9082611d38565b5060078101805460ff1916600190811790915581015460028201546040516001600160a01b039092169184917f5199943f297b0f072586a489c227c64b34f6c3f575babaef9f9f98e13823c3009161164c919060048701906006880190611e8e565b60405180910390a35050565b60606116634261169d565b61166c8361169d565b6116753361169d565b60405160200161168793929190611ec3565b6040516020818303038152906040529050919050565b6060816000036116c45750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116e757806116d881611c7b565b915050600482901c91506116c8565b60008167ffffffffffffffff811115611702576117026118e5565b6040519080825280601f01601f19166020018201604052801561172c576020820181803683370190505b509050815b80156108d1576f181899199a1a9b1b9c1cb0b131b232b360811b86600f166010811061175f5761175f611c65565b1a60f81b8261176f600184611c1c565b8151811061177f5761177f611c65565b60200101906001600160f81b031916908160001a90535060049590951c94806117a781611f1a565b915050611731565b6040518061012001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001606081526020016060815260200160608152602001600015158152602001600081525090565b60006020828403121561181857600080fd5b5035919050565b6000806040838503121561183257600080fd5b50508035926020909101359150565b80356001600160a01b038116811461185857600080fd5b919050565b60006020828403121561186f57600080fd5b61187882611841565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156118b75783518352928401929184019160010161189b565b50909695505050505050565b6000602082840312156118d557600080fd5b8135801515811461187857600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261190c57600080fd5b813567ffffffffffffffff80821115611927576119276118e5565b604051601f8301601f19908116603f0116810190828211818310171561194f5761194f6118e5565b8160405283815286602085880101111561196857600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561199d57600080fd5b83359250602084013567ffffffffffffffff808211156119bc57600080fd5b6119c8878388016118fb565b935060408601359150808211156119de57600080fd5b506119eb868287016118fb565b9150509250925092565b600060208284031215611a0757600080fd5b813567ffffffffffffffff811115611a1e57600080fd5b611a2a848285016118fb565b949350505050565b60005b83811015611a4d578181015183820152602001611a35565b50506000910152565b60008151808452611a6e816020860160208601611a32565b601f01601f19169290920160200192915050565b60006101208b835260018060a01b038b166020840152896040840152886060840152806080840152611ab681840189611a56565b905082810360a0840152611aca8188611a56565b905082810360c0840152611ade8187611a56565b94151560e084015250506101000152979650505050505050565b602081528151602082015260006020830151611b1f60408401826001600160a01b03169052565b50604083015160608301526060830151608083015260808301516101208060a0850152611b50610140850183611a56565b915060a0850151601f19808685030160c0870152611b6e8483611a56565b935060c08701519150808685030160e087015250611b8c8382611a56565b92505060e0850151610100611ba48187018315159052565b959095015193019290925250919050565b60008060408385031215611bc857600080fd5b611bd183611841565b946020939093013593505050565b6020808252600d908201526c2737ba103a34329027bbb732b960991b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115611c2f57611c2f611c06565b92915050565b602080825260169082015275119d5b991a5b99c8191bd95cc81b9bdd08195e1a5cdd60521b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201611c8d57611c8d611c06565b5060010190565b60008251611ca6818460208701611a32565b9190910192915050565b600181811c90821680611cc457607f821691505b602082108103611ce457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c2d57600081815260208120601f850160051c81016020861015611d115750805b601f850160051c820191505b81811015611d3057828155600101611d1d565b505050505050565b815167ffffffffffffffff811115611d5257611d526118e5565b611d6681611d608454611cb0565b84611cea565b602080601f831160018114611d9b5760008415611d835750858301515b600019600386901b1c1916600185901b178555611d30565b600085815260208120601f198616915b82811015611dca57888601518255948401946001909101908401611dab565b5085821015611de85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000611a2a6040830184611a56565b60008154611e1e81611cb0565b808552602060018381168015611e3b5760018114611e5557611e83565b60ff1985168884015283151560051b880183019550611e83565b866000528260002060005b85811015611e7b5781548a8201860152908301908401611e60565b890184019650505b505050505092915050565b838152606060208201526000611ea76060830185611e11565b8281036040840152611eb98185611e11565b9695505050505050565b61060f60f31b815260008451611ee0816002850160208901611a32565b845190830190611ef7816002840160208901611a32565b8451910190611f0d816002840160208801611a32565b0160020195945050505050565b600081611f2957611f29611c06565b50600019019056fea26469706673582212200e3fd353079ddb8b7419ba400dbdcc1578896a8a4c6dff53dbd9572a8ffd852264736f6c63430008140033",
  "devdoc": {
    "author": "MorphCash Team",
    "kind": "dev",
    "methods": {
      "emergencyWithdraw()": {
        "details": "Emergency withdraw all funds (owner only)"
      },
      "fundCard(uint256,string,string)": {
        "details": "Fund a virtual card with ETH payment This function is called when a user wants to fund their virtual card The payment is processed immediately and events are emitted for frontend handling",
        "params": {
          "cardType": "Type of card (Visa, Mastercard, etc.)",
          "ghsAmount": "Amount in GHS (for reference)",
          "paymentReference": "Payment reference for tracking"
        }
      },
      "getCardFunding(uint256)": {
        "details": "Get card funding details by ID",
        "params": {
          "fundingId": "The funding ID"
        },
        "returns": {
          "_0": "The card funding data"
        }
      },
      "getCardFundingByReference(string)": {
        "details": "Get card funding by reference",
        "params": {
          "paymentReference": "The payment reference"
        },
        "returns": {
          "_0": "The card funding data"
        }
      },
      "getCardFundingsByStatus(bool)": {
        "details": "Get card fundings by processed status",
        "params": {
          "isProcessed": "Whether to filter by processed status"
        },
        "returns": {
          "_0": "Array of funding IDs matching the criteria"
        }
      },
      "getContractBalance()": {
        "details": "Get contract balance",
        "returns": {
          "_0": "The contract's ETH balance"
        }
      },
      "getFundingLimits()": {
        "details": "Get funding limits",
        "returns": {
          "maximumAmount": "The maximum funding amount",
          "minimumAmount": "The minimum funding amount"
        }
      },
      "getTotalCardFundings()": {
        "details": "Get total number of card fundings",
        "returns": {
          "_0": "The total number of fundings"
        }
      },
      "getUserCardFundings(address)": {
        "details": "Get all card fundings for a user",
        "params": {
          "userAddress": "The user's address"
        },
        "returns": {
          "_0": "Array of funding IDs"
        }
      },
      "isCardFundingProcessed(uint256)": {
        "details": "Check if a card funding is processed",
        "params": {
          "fundingId": "The funding ID"
        },
        "returns": {
          "_0": "True if processed, false otherwise"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setFundingLimits(uint256,uint256)": {
        "details": "Set minimum and maximum funding amounts (owner only)",
        "params": {
          "_maximumAmount": "Maximum funding amount in wei",
          "_minimumAmount": "Minimum funding amount in wei"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "details": "Withdraw contract balance (owner only)",
        "params": {
          "amount": "Amount to withdraw in wei"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "PaymentContract - Blockchain Payment Processing for Card Funding Handles ETH payments from ENS/connected wallets via Coinbase integration Emits events for frontend to handle Supabase card creation",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/PaymentContract.sol:PaymentContract",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/PaymentContract.sol:PaymentContract",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 240,
        "contract": "contracts/PaymentContract.sol:PaymentContract",
        "label": "minimumFundingAmount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 243,
        "contract": "contracts/PaymentContract.sol:PaymentContract",
        "label": "maximumFundingAmount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 248,
        "contract": "contracts/PaymentContract.sol:PaymentContract",
        "label": "cardFundings",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(CardFunding)235_storage)"
      },
      {
        "astId": 252,
        "contract": "contracts/PaymentContract.sol:PaymentContract",
        "label": "paymentReferenceToFundingId",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      {
        "astId": 257,
        "contract": "contracts/PaymentContract.sol:PaymentContract",
        "label": "userFundings",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 260,
        "contract": "contracts/PaymentContract.sol:PaymentContract",
        "label": "nextFundingId",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(CardFunding)235_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PaymentContract.CardFunding)",
        "numberOfBytes": "32",
        "value": "t_struct(CardFunding)235_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CardFunding)235_storage": {
        "encoding": "inplace",
        "label": "struct PaymentContract.CardFunding",
        "members": [
          {
            "astId": 218,
            "contract": "contracts/PaymentContract.sol:PaymentContract",
            "label": "fundingId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 220,
            "contract": "contracts/PaymentContract.sol:PaymentContract",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 222,
            "contract": "contracts/PaymentContract.sol:PaymentContract",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 224,
            "contract": "contracts/PaymentContract.sol:PaymentContract",
            "label": "ghsAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 226,
            "contract": "contracts/PaymentContract.sol:PaymentContract",
            "label": "cardType",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 228,
            "contract": "contracts/PaymentContract.sol:PaymentContract",
            "label": "paymentReference",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 230,
            "contract": "contracts/PaymentContract.sol:PaymentContract",
            "label": "transactionHash",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 232,
            "contract": "contracts/PaymentContract.sol:PaymentContract",
            "label": "isProcessed",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          },
          {
            "astId": 234,
            "contract": "contracts/PaymentContract.sol:PaymentContract",
            "label": "createdAt",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}