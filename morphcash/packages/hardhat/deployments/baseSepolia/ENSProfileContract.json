{
  "address": "0x1cB6Bf434bab90E9e085383db9766C797c987380",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ensHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        }
      ],
      "name": "ProfileCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ensHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        }
      ],
      "name": "ProfileUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToENS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ensHash",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "displayName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "avatar",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "website",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "twitter",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "github",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "discord",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "telegram",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct ENSProfileContract.UserProfile",
          "name": "profile",
          "type": "tuple"
        }
      ],
      "name": "createProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllRegisteredENS",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ensHash",
          "type": "bytes32"
        }
      ],
      "name": "getProfile",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "displayName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "avatar",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "website",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "twitter",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "github",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "discord",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "telegram",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct ENSProfileContract.UserProfile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getProfileByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "displayName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "avatar",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "website",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "twitter",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "github",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "discord",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "telegram",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct ENSProfileContract.UserProfile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalProfiles",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registeredENS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ensHash",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "displayName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "avatar",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "website",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "twitter",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "github",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "discord",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "telegram",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct ENSProfileContract.UserProfile",
          "name": "profile",
          "type": "tuple"
        }
      ],
      "name": "updateProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "userProfiles",
      "outputs": [
        {
          "internalType": "string",
          "name": "displayName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "avatar",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "website",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "twitter",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "github",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "discord",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "telegram",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xeecc1c177ac66e3ce7184a508e02dbe75299e918ea634b41062f16ace1b379e4",
  "receipt": {
    "to": null,
    "from": "0x6D3D7d820660c8075147Edbd820f5e85A1e459a9",
    "contractAddress": "0x1cB6Bf434bab90E9e085383db9766C797c987380",
    "transactionIndex": 3,
    "gasUsed": "1846185",
    "logsBloom": "0x
    "blockHash": "0xb19536901560e05b16f6d1dd947c30e831c6488537dd427bf09afe1f13cedc2b",
    "transactionHash": "0xeecc1c177ac66e3ce7184a508e02dbe75299e918ea634b41062f16ace1b379e4",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 30692564,
        "transactionHash": "0xeecc1c177ac66e3ce7184a508e02dbe75299e918ea634b41062f16ace1b379e4",
        "address": "0x1cB6Bf434bab90E9e085383db9766C797c987380",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006d3d7d820660c8075147edbd820f5e85a1e459a9"
        ],
        "data": "0x",
        "logIndex": 40,
        "blockHash": "0xb19536901560e05b16f6d1dd947c30e831c6488537dd427bf09afe1f13cedc2b"
      },
      {
        "transactionIndex": 3,
        "blockNumber": 30692564,
        "transactionHash": "0xeecc1c177ac66e3ce7184a508e02dbe75299e918ea634b41062f16ace1b379e4",
        "address": "0x1cB6Bf434bab90E9e085383db9766C797c987380",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000006d3d7d820660c8075147edbd820f5e85a1e459a9",
          "0x0000000000000000000000006d3d7d820660c8075147edbd820f5e85a1e459a9"
        ],
        "data": "0x",
        "logIndex": 41,
        "blockHash": "0xb19536901560e05b16f6d1dd947c30e831c6488537dd427bf09afe1f13cedc2b"
      }
    ],
    "blockNumber": 30692564,
    "cumulativeGasUsed": "2607830",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6D3D7d820660c8075147Edbd820f5e85A1e459a9"
  ],
  "numDeployments": 1,
  "solcInputHash": "cb1e78262d26b488e33b0bb4e9475752",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ensHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"}],\"name\":\"ProfileCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ensHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"}],\"name\":\"ProfileUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToENS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ensHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"displayName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"website\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"github\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"discord\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telegram\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ENSProfileContract.UserProfile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"name\":\"createProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRegisteredENS\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ensHash\",\"type\":\"bytes32\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"displayName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"website\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"github\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"discord\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telegram\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ENSProfileContract.UserProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getProfileByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"displayName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"website\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"github\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"discord\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telegram\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ENSProfileContract.UserProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalProfiles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredENS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ensHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"displayName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"website\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"github\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"discord\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telegram\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ENSProfileContract.UserProfile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"name\":\"updateProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"userProfiles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"displayName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"website\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"github\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"discord\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telegram\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"MorphCash Team\",\"kind\":\"dev\",\"methods\":{\"createProfile(bytes32,string,(string,string,string,string,string,string,string,string,bool,uint256,uint256))\":{\"details\":\"Create a new user profile associated with an ENS name\",\"params\":{\"ensHash\":\"The keccak256 hash of the ENS name\",\"ensName\":\"The actual ENS name string for events\",\"profile\":\"The initial profile data\"}},\"getAllRegisteredENS()\":{\"details\":\"Get all registered ENS hashes\",\"returns\":{\"_0\":\"Array of registered ENS hashes\"}},\"getProfile(bytes32)\":{\"details\":\"Get user profile by ENS name hash\",\"params\":{\"ensHash\":\"The keccak256 hash of the ENS name\"},\"returns\":{\"_0\":\"The user profile data\"}},\"getProfileByAddress(address)\":{\"details\":\"Get user profile by address\",\"params\":{\"userAddress\":\"The address of the user\"},\"returns\":{\"_0\":\"The user profile data\"}},\"getTotalProfiles()\":{\"details\":\"Get total number of registered profiles\",\"returns\":{\"_0\":\"The number of registered profiles\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateProfile(bytes32,string,(string,string,string,string,string,string,string,string,bool,uint256,uint256))\":{\"details\":\"Update an existing user profile\",\"params\":{\"ensHash\":\"The keccak256 hash of the ENS name\",\"ensName\":\"The actual ENS name string for events\",\"profile\":\"The updated profile data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ENSProfileContract - ENS User Profile Management Handles user profile creation and management associated with ENS names\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ENSProfileContract.sol\":\"ENSProfileContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/ENSProfileContract.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\n/**\\r\\n * ENSProfileContract - ENS User Profile Management\\r\\n * Handles user profile creation and management associated with ENS names\\r\\n * @author MorphCash Team\\r\\n */\\r\\ncontract ENSProfileContract is Ownable, ReentrancyGuard {\\r\\n    // ENS User Profile Struct\\r\\n    struct UserProfile {\\r\\n        string displayName;\\r\\n        string bio;\\r\\n        string avatar;\\r\\n        string website;\\r\\n        string twitter;\\r\\n        string github;\\r\\n        string discord;\\r\\n        string telegram;\\r\\n        bool isActive;\\r\\n        uint256 createdAt;\\r\\n        uint256 updatedAt;\\r\\n    }\\r\\n\\r\\n    // State Variables\\r\\n    address public immutable contractOwner;\\r\\n    \\r\\n    // Mappings\\r\\n    mapping(bytes32 => UserProfile) public userProfiles;\\r\\n    mapping(address => bytes32) public addressToENS;\\r\\n    \\r\\n    // Arrays\\r\\n    bytes32[] public registeredENS;\\r\\n\\r\\n    // Events\\r\\n    event ProfileCreated(bytes32 indexed ensHash, address indexed user, string ensName);\\r\\n    event ProfileUpdated(bytes32 indexed ensHash, address indexed user, string ensName);\\r\\n\\r\\n    // Constructor\\r\\n    constructor(address _owner) {\\r\\n        contractOwner = _owner;\\r\\n        _transferOwnership(_owner);\\r\\n    }\\r\\n\\r\\n    // Modifier\\r\\n    modifier isOwner() {\\r\\n        require(msg.sender == contractOwner, \\\"Not the Owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Create a new user profile associated with an ENS name\\r\\n     * @param ensHash The keccak256 hash of the ENS name\\r\\n     * @param ensName The actual ENS name string for events\\r\\n     * @param profile The initial profile data\\r\\n     */\\r\\n    function createProfile(\\r\\n        bytes32 ensHash,\\r\\n        string memory ensName,\\r\\n        UserProfile memory profile\\r\\n    ) external nonReentrant {\\r\\n        require(userProfiles[ensHash].createdAt == 0, \\\"Profile already exists\\\");\\r\\n        require(addressToENS[msg.sender] == bytes32(0), \\\"Address already has a profile\\\");\\r\\n        \\r\\n        profile.createdAt = block.timestamp;\\r\\n        profile.updatedAt = block.timestamp;\\r\\n        profile.isActive = true;\\r\\n        \\r\\n        userProfiles[ensHash] = profile;\\r\\n        addressToENS[msg.sender] = ensHash;\\r\\n        registeredENS.push(ensHash);\\r\\n        \\r\\n        emit ProfileCreated(ensHash, msg.sender, ensName);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Update an existing user profile\\r\\n     * @param ensHash The keccak256 hash of the ENS name\\r\\n     * @param ensName The actual ENS name string for events\\r\\n     * @param profile The updated profile data\\r\\n     */\\r\\n    function updateProfile(\\r\\n        bytes32 ensHash,\\r\\n        string memory ensName,\\r\\n        UserProfile memory profile\\r\\n    ) external nonReentrant {\\r\\n        require(userProfiles[ensHash].createdAt > 0, \\\"Profile does not exist\\\");\\r\\n        require(addressToENS[msg.sender] == ensHash, \\\"Not the profile owner\\\");\\r\\n        \\r\\n        profile.createdAt = userProfiles[ensHash].createdAt;\\r\\n        profile.updatedAt = block.timestamp;\\r\\n        profile.isActive = true;\\r\\n        \\r\\n        userProfiles[ensHash] = profile;\\r\\n        \\r\\n        emit ProfileUpdated(ensHash, msg.sender, ensName);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get user profile by ENS name hash\\r\\n     * @param ensHash The keccak256 hash of the ENS name\\r\\n     * @return The user profile data\\r\\n     */\\r\\n    function getProfile(bytes32 ensHash) external view returns (UserProfile memory) {\\r\\n        require(userProfiles[ensHash].createdAt > 0, \\\"Profile does not exist\\\");\\r\\n        return userProfiles[ensHash];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get user profile by address\\r\\n     * @param userAddress The address of the user\\r\\n     * @return The user profile data\\r\\n     */\\r\\n    function getProfileByAddress(address userAddress) external view returns (UserProfile memory) {\\r\\n        bytes32 ensHash = addressToENS[userAddress];\\r\\n        require(ensHash != bytes32(0), \\\"No profile found for this address\\\");\\r\\n        return userProfiles[ensHash];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get total number of registered profiles\\r\\n     * @return The number of registered profiles\\r\\n     */\\r\\n    function getTotalProfiles() external view returns (uint256) {\\r\\n        return registeredENS.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get all registered ENS hashes\\r\\n     * @return Array of registered ENS hashes\\r\\n     */\\r\\n    function getAllRegisteredENS() external view returns (bytes32[] memory) {\\r\\n        return registeredENS;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function that allows the contract to receive ETH\\r\\n     */\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x3405b5f56005fef3c2131f2d73f50fb83688b752617f1b668b6238887ca66ab0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100c65760003560e01c8063b50991b41161007f578063ce606ee011610059578063ce606ee014610223578063d564f14814610257578063ec74709e1461028e578063f2fde38b146102ae57600080fd5b8063b50991b4146101ce578063bab17ce9146101ee578063ca4990121461020357600080fd5b806312391dd1146100d25780634cd6959c146100fd5780636a0900af1461012a578063715018a61461014c5780638da5cb5b14610161578063949eb0bd1461019357600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100e76102ce565b6040516100f49190611880565b60405180910390f35b34801561010957600080fd5b5061011d6101183660046118c4565b610326565b6040516100f4919061193a565b34801561013657600080fd5b5061014a610145366004611b40565b610877565b005b34801561015857600080fd5b5061014a610a7b565b34801561016d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100f4565b34801561019f57600080fd5b506101c06101ae3660046118c4565b60036020526000908152604090205481565b6040519081526020016100f4565b3480156101da57600080fd5b5061011d6101e9366004611d08565b610a8f565b3480156101fa57600080fd5b506004546101c0565b34801561020f57600080fd5b506101c061021e366004611d08565b610fc1565b34801561022f57600080fd5b5061017b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561026357600080fd5b50610277610272366004611d08565b610fe2565b6040516100f49b9a99989796959493929190611d21565b34801561029a57600080fd5b5061014a6102a9366004611b40565b61147a565b3480156102ba57600080fd5b5061014a6102c93660046118c4565b6116a8565b6060600480548060200260200160405190810160405280929190818152602001828054801561031c57602002820191906000526020600020905b815481526020019060010190808311610308575b5050505050905090565b61032e611824565b6001600160a01b038216600090815260036020526040902054806103a35760405162461bcd60e51b815260206004820152602160248201527f4e6f2070726f66696c6520666f756e6420666f722074686973206164647265736044820152607360f81b60648201526084015b60405180910390fd5b60008181526002602052604090819020815161016081019092528054829082906103cc90611dee565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890611dee565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050815260200160018201805461045e90611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461048a90611dee565b80156104d75780601f106104ac576101008083540402835291602001916104d7565b820191906000526020600020905b8154815290600101906020018083116104ba57829003601f168201915b505050505081526020016002820180546104f090611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461051c90611dee565b80156105695780601f1061053e57610100808354040283529160200191610569565b820191906000526020600020905b81548152906001019060200180831161054c57829003601f168201915b5050505050815260200160038201805461058290611dee565b80601f01602080910402602001604051908101604052809291908181526020018280546105ae90611dee565b80156105fb5780601f106105d0576101008083540402835291602001916105fb565b820191906000526020600020905b8154815290600101906020018083116105de57829003601f168201915b5050505050815260200160048201805461061490611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461064090611dee565b801561068d5780601f106106625761010080835404028352916020019161068d565b820191906000526020600020905b81548152906001019060200180831161067057829003601f168201915b505050505081526020016005820180546106a690611dee565b80601f01602080910402602001604051908101604052809291908181526020018280546106d290611dee565b801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b5050505050815260200160068201805461073890611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461076490611dee565b80156107b15780601f10610786576101008083540402835291602001916107b1565b820191906000526020600020905b81548152906001019060200180831161079457829003601f168201915b505050505081526020016007820180546107ca90611dee565b80601f01602080910402602001604051908101604052809291908181526020018280546107f690611dee565b80156108435780601f1061081857610100808354040283529160200191610843565b820191906000526020600020905b81548152906001019060200180831161082657829003601f168201915b5050509183525050600882015460ff161515602082015260098201546040820152600a909101546060909101529392505050565b61087f611721565b6000838152600260205260409020600901546108d65760405162461bcd60e51b8152602060048201526016602482015275141c9bd99a5b1948191bd95cc81b9bdd08195e1a5cdd60521b604482015260640161039a565b33600090815260036020526040902054831461092c5760405162461bcd60e51b81526020600482015260156024820152742737ba103a343290383937b334b6329037bbb732b960591b604482015260640161039a565b60008381526002602081815260408320600981015461012086015242610140860152600161010086015292869052528151829190819061096c9082611e76565b50602082015160018201906109819082611e76565b50604082015160028201906109969082611e76565b50606082015160038201906109ab9082611e76565b50608082015160048201906109c09082611e76565b5060a082015160058201906109d59082611e76565b5060c082015160068201906109ea9082611e76565b5060e082015160078201906109ff9082611e76565b5061010082015160088201805460ff1916911515919091179055610120820151600982015561014090910151600a90910155604051339084907fffa2f3d62a37fca3012243c56a6caf394876d565ea335b0f1ae1cbae753b1d0890610a65908690611f36565b60405180910390a3610a7660018055565b505050565b610a8361177a565b610a8d60006117d4565b565b610a97611824565b600082815260026020526040902060090154610aee5760405162461bcd60e51b8152602060048201526016602482015275141c9bd99a5b1948191bd95cc81b9bdd08195e1a5cdd60521b604482015260640161039a565b6000828152600260205260409081902081516101608101909252805482908290610b1790611dee565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4390611dee565b8015610b905780601f10610b6557610100808354040283529160200191610b90565b820191906000526020600020905b815481529060010190602001808311610b7357829003601f168201915b50505050508152602001600182018054610ba990611dee565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd590611dee565b8015610c225780601f10610bf757610100808354040283529160200191610c22565b820191906000526020600020905b815481529060010190602001808311610c0557829003601f168201915b50505050508152602001600282018054610c3b90611dee565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6790611dee565b8015610cb45780601f10610c8957610100808354040283529160200191610cb4565b820191906000526020600020905b815481529060010190602001808311610c9757829003601f168201915b50505050508152602001600382018054610ccd90611dee565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf990611dee565b8015610d465780601f10610d1b57610100808354040283529160200191610d46565b820191906000526020600020905b815481529060010190602001808311610d2957829003601f168201915b50505050508152602001600482018054610d5f90611dee565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8b90611dee565b8015610dd85780601f10610dad57610100808354040283529160200191610dd8565b820191906000526020600020905b815481529060010190602001808311610dbb57829003601f168201915b50505050508152602001600582018054610df190611dee565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1d90611dee565b8015610e6a5780601f10610e3f57610100808354040283529160200191610e6a565b820191906000526020600020905b815481529060010190602001808311610e4d57829003601f168201915b50505050508152602001600682018054610e8390611dee565b80601f0160208091040260200160405190810160405280929190818152602001828054610eaf90611dee565b8015610efc5780601f10610ed157610100808354040283529160200191610efc565b820191906000526020600020905b815481529060010190602001808311610edf57829003601f168201915b50505050508152602001600782018054610f1590611dee565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4190611dee565b8015610f8e5780601f10610f6357610100808354040283529160200191610f8e565b820191906000526020600020905b815481529060010190602001808311610f7157829003601f168201915b5050509183525050600882015460ff161515602082015260098201546040820152600a9091015460609091015292915050565b60048181548110610fd157600080fd5b600091825260209091200154905081565b600260205260009081526040902080548190610ffd90611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461102990611dee565b80156110765780601f1061104b57610100808354040283529160200191611076565b820191906000526020600020905b81548152906001019060200180831161105957829003601f168201915b50505050509080600101805461108b90611dee565b80601f01602080910402602001604051908101604052809291908181526020018280546110b790611dee565b80156111045780601f106110d957610100808354040283529160200191611104565b820191906000526020600020905b8154815290600101906020018083116110e757829003601f168201915b50505050509080600201805461111990611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461114590611dee565b80156111925780601f1061116757610100808354040283529160200191611192565b820191906000526020600020905b81548152906001019060200180831161117557829003601f168201915b5050505050908060030180546111a790611dee565b80601f01602080910402602001604051908101604052809291908181526020018280546111d390611dee565b80156112205780601f106111f557610100808354040283529160200191611220565b820191906000526020600020905b81548152906001019060200180831161120357829003601f168201915b50505050509080600401805461123590611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461126190611dee565b80156112ae5780601f10611283576101008083540402835291602001916112ae565b820191906000526020600020905b81548152906001019060200180831161129157829003601f168201915b5050505050908060050180546112c390611dee565b80601f01602080910402602001604051908101604052809291908181526020018280546112ef90611dee565b801561133c5780601f106113115761010080835404028352916020019161133c565b820191906000526020600020905b81548152906001019060200180831161131f57829003601f168201915b50505050509080600601805461135190611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461137d90611dee565b80156113ca5780601f1061139f576101008083540402835291602001916113ca565b820191906000526020600020905b8154815290600101906020018083116113ad57829003601f168201915b5050505050908060070180546113df90611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461140b90611dee565b80156114585780601f1061142d57610100808354040283529160200191611458565b820191906000526020600020905b81548152906001019060200180831161143b57829003601f168201915b5050505060088301546009840154600a90940154929360ff909116929091508b565b611482611721565b600083815260026020526040902060090154156114da5760405162461bcd60e51b815260206004820152601660248201527550726f66696c6520616c72656164792065786973747360501b604482015260640161039a565b33600090815260036020526040902054156115375760405162461bcd60e51b815260206004820152601d60248201527f4164647265737320616c72656164792068617320612070726f66696c65000000604482015260640161039a565b426101208201819052610140820152600161010082015260008381526002602052604090208151829190819061156d9082611e76565b50602082015160018201906115829082611e76565b50604082015160028201906115979082611e76565b50606082015160038201906115ac9082611e76565b50608082015160048201906115c19082611e76565b5060a082015160058201906115d69082611e76565b5060c082015160068201906115eb9082611e76565b5060e082015160078201906116009082611e76565b5061010082015160088201805460ff1916911515919091179055610120820151600982015561014090910151600a90910155336000818152600360205260408082208690556004805460018101825592527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9091018590555184907f86109a8e4ca4cb3cc16e81c8b1736dfdd492194a236cabcc1eb076e96749672e90610a65908690611f36565b6116b061177a565b6001600160a01b0381166117155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161039a565b61171e816117d4565b50565b6002600154036117735760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161039a565b6002600155565b6000546001600160a01b03163314610a8d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051806101600160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160001515815260200160008152602001600081525090565b6020808252825182820181905260009190848201906040850190845b818110156118b85783518352928401929184019160010161189c565b50909695505050505050565b6000602082840312156118d657600080fd5b81356001600160a01b03811681146118ed57600080fd5b9392505050565b6000815180845260005b8181101561191a576020818501810151868301820152016118fe565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600082516101608060208501526119596101808501836118f4565b91506020850151601f198086850301604087015261197784836118f4565b9350604087015191508086850301606087015261199484836118f4565b935060608701519150808685030160808701526119b184836118f4565b935060808701519150808685030160a08701526119ce84836118f4565b935060a08701519150808685030160c08701526119eb84836118f4565b935060c08701519150808685030160e0870152611a0884836118f4565b935060e08701519150610100818786030181880152611a2785846118f4565b94508088015192505050610120611a418187018315159052565b860151610140868101919091529095015193019290925250919050565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715611a9857611a98611a5e565b60405290565b600082601f830112611aaf57600080fd5b813567ffffffffffffffff80821115611aca57611aca611a5e565b604051601f8301601f19908116603f01168101908282118183101715611af257611af2611a5e565b81604052838152866020858801011115611b0b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b80358015158114611b3b57600080fd5b919050565b600080600060608486031215611b5557600080fd5b83359250602084013567ffffffffffffffff80821115611b7457600080fd5b611b8087838801611a9e565b93506040860135915080821115611b9657600080fd5b908501906101608288031215611bab57600080fd5b611bb3611a74565b823582811115611bc257600080fd5b611bce89828601611a9e565b825250602083013582811115611be357600080fd5b611bef89828601611a9e565b602083015250604083013582811115611c0757600080fd5b611c1389828601611a9e565b604083015250606083013582811115611c2b57600080fd5b611c3789828601611a9e565b606083015250608083013582811115611c4f57600080fd5b611c5b89828601611a9e565b60808301525060a083013582811115611c7357600080fd5b611c7f89828601611a9e565b60a08301525060c083013582811115611c9757600080fd5b611ca389828601611a9e565b60c08301525060e083013582811115611cbb57600080fd5b611cc789828601611a9e565b60e0830152506101009150611cdd828401611b2b565b8282015261012091508183013582820152610140915081830135828201528093505050509250925092565b600060208284031215611d1a57600080fd5b5035919050565b6000610160808352611d358184018f6118f4565b90508281036020840152611d49818e6118f4565b90508281036040840152611d5d818d6118f4565b90508281036060840152611d71818c6118f4565b90508281036080840152611d85818b6118f4565b905082810360a0840152611d99818a6118f4565b905082810360c0840152611dad81896118f4565b905082810360e0840152611dc181886118f4565b915050611dd361010083018615159052565b61012082019390935261014001529998505050505050505050565b600181811c90821680611e0257607f821691505b602082108103611e2257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a7657600081815260208120601f850160051c81016020861015611e4f5750805b601f850160051c820191505b81811015611e6e57828155600101611e5b565b505050505050565b815167ffffffffffffffff811115611e9057611e90611a5e565b611ea481611e9e8454611dee565b84611e28565b602080601f831160018114611ed95760008415611ec15750858301515b600019600386901b1c1916600185901b178555611e6e565b600085815260208120601f198616915b82811015611f0857888601518255948401946001909101908401611ee9565b5085821015611f265787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260006118ed60208301846118f456fea2646970667358221220a4a05b567da873f0d2bb3394c687c52088283ac20932e857ce87c26a137d48b864736f6c63430008140033",
  "devdoc": {
    "author": "MorphCash Team",
    "kind": "dev",
    "methods": {
      "createProfile(bytes32,string,(string,string,string,string,string,string,string,string,bool,uint256,uint256))": {
        "details": "Create a new user profile associated with an ENS name",
        "params": {
          "ensHash": "The keccak256 hash of the ENS name",
          "ensName": "The actual ENS name string for events",
          "profile": "The initial profile data"
        }
      },
      "getAllRegisteredENS()": {
        "details": "Get all registered ENS hashes",
        "returns": {
          "_0": "Array of registered ENS hashes"
        }
      },
      "getProfile(bytes32)": {
        "details": "Get user profile by ENS name hash",
        "params": {
          "ensHash": "The keccak256 hash of the ENS name"
        },
        "returns": {
          "_0": "The user profile data"
        }
      },
      "getProfileByAddress(address)": {
        "details": "Get user profile by address",
        "params": {
          "userAddress": "The address of the user"
        },
        "returns": {
          "_0": "The user profile data"
        }
      },
      "getTotalProfiles()": {
        "details": "Get total number of registered profiles",
        "returns": {
          "_0": "The number of registered profiles"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateProfile(bytes32,string,(string,string,string,string,string,string,string,string,bool,uint256,uint256))": {
        "details": "Update an existing user profile",
        "params": {
          "ensHash": "The keccak256 hash of the ENS name",
          "ensName": "The actual ENS name string for events",
          "profile": "The updated profile data"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "ENSProfileContract - ENS User Profile Management Handles user profile creation and management associated with ENS names",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 246,
        "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
        "label": "userProfiles",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_struct(UserProfile)239_storage)"
      },
      {
        "astId": 250,
        "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
        "label": "addressToENS",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bytes32)"
      },
      {
        "astId": 253,
        "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
        "label": "registeredENS",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_bytes32)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_struct(UserProfile)239_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct ENSProfileContract.UserProfile)",
        "numberOfBytes": "32",
        "value": "t_struct(UserProfile)239_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(UserProfile)239_storage": {
        "encoding": "inplace",
        "label": "struct ENSProfileContract.UserProfile",
        "members": [
          {
            "astId": 218,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "displayName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 220,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "bio",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 222,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "avatar",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 224,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "website",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 226,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "twitter",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 228,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "github",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 230,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "discord",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 232,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "telegram",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 234,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "isActive",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 236,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "createdAt",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 238,
            "contract": "contracts/ENSProfileContract.sol:ENSProfileContract",
            "label": "updatedAt",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}