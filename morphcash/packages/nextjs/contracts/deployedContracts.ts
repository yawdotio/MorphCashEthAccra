/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  84532: {
    ENSProfileContract: {
      address: "0x1cB6Bf434bab90E9e085383db9766C797c987380",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "ensHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "ensName",
              type: "string",
            },
          ],
          name: "ProfileCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "ensHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "ensName",
              type: "string",
            },
          ],
          name: "ProfileUpdated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "addressToENS",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "contractOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "ensHash",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "ensName",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "displayName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "bio",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "avatar",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "website",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "twitter",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "github",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "discord",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "telegram",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "updatedAt",
                  type: "uint256",
                },
              ],
              internalType: "struct ENSProfileContract.UserProfile",
              name: "profile",
              type: "tuple",
            },
          ],
          name: "createProfile",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllRegisteredENS",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "ensHash",
              type: "bytes32",
            },
          ],
          name: "getProfile",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "displayName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "bio",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "avatar",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "website",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "twitter",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "github",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "discord",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "telegram",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "updatedAt",
                  type: "uint256",
                },
              ],
              internalType: "struct ENSProfileContract.UserProfile",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
          ],
          name: "getProfileByAddress",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "displayName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "bio",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "avatar",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "website",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "twitter",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "github",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "discord",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "telegram",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "updatedAt",
                  type: "uint256",
                },
              ],
              internalType: "struct ENSProfileContract.UserProfile",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalProfiles",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "registeredENS",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "ensHash",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "ensName",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "displayName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "bio",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "avatar",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "website",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "twitter",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "github",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "discord",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "telegram",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "updatedAt",
                  type: "uint256",
                },
              ],
              internalType: "struct ENSProfileContract.UserProfile",
              name: "profile",
              type: "tuple",
            },
          ],
          name: "updateProfile",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "userProfiles",
          outputs: [
            {
              internalType: "string",
              name: "displayName",
              type: "string",
            },
            {
              internalType: "string",
              name: "bio",
              type: "string",
            },
            {
              internalType: "string",
              name: "avatar",
              type: "string",
            },
            {
              internalType: "string",
              name: "website",
              type: "string",
            },
            {
              internalType: "string",
              name: "twitter",
              type: "string",
            },
            {
              internalType: "string",
              name: "github",
              type: "string",
            },
            {
              internalType: "string",
              name: "discord",
              type: "string",
            },
            {
              internalType: "string",
              name: "telegram",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "updatedAt",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 30692564,
    },
    PaymentContract: {
      address: "0xE02B778a801658aaC5E0524B3E2647926DbCe092",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "fundingId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "reason",
              type: "string",
            },
          ],
          name: "CardFundingFailed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "fundingId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "paymentReference",
              type: "string",
            },
          ],
          name: "CardFundingInitiated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "fundingId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "cardType",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "transactionHash",
              type: "string",
            },
          ],
          name: "CardFundingSuccess",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "cardFundings",
          outputs: [
            {
              internalType: "uint256",
              name: "fundingId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "ghsAmount",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cardType",
              type: "string",
            },
            {
              internalType: "string",
              name: "paymentReference",
              type: "string",
            },
            {
              internalType: "string",
              name: "transactionHash",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isProcessed",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "contractOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "emergencyWithdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "ghsAmount",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cardType",
              type: "string",
            },
            {
              internalType: "string",
              name: "paymentReference",
              type: "string",
            },
          ],
          name: "fundCard",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "fundingId",
              type: "uint256",
            },
          ],
          name: "getCardFunding",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "fundingId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "user",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "ghsAmount",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "cardType",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "paymentReference",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "transactionHash",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isProcessed",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
              ],
              internalType: "struct PaymentContract.CardFunding",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "paymentReference",
              type: "string",
            },
          ],
          name: "getCardFundingByReference",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "fundingId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "user",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "ghsAmount",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "cardType",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "paymentReference",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "transactionHash",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isProcessed",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
              ],
              internalType: "struct PaymentContract.CardFunding",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "isProcessed",
              type: "bool",
            },
          ],
          name: "getCardFundingsByStatus",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getContractBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFundingLimits",
          outputs: [
            {
              internalType: "uint256",
              name: "minimumAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maximumAmount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalCardFundings",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
          ],
          name: "getUserCardFundings",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "fundingId",
              type: "uint256",
            },
          ],
          name: "isCardFundingProcessed",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "maximumFundingAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "minimumFundingAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextFundingId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "paymentReferenceToFundingId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_minimumAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_maximumAmount",
              type: "uint256",
            },
          ],
          name: "setFundingLimits",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userFundings",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 30692565,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
