/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    YourContract: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "ensHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "ensName",
              type: "string",
            },
          ],
          name: "ProfileCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "ensHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "ensName",
              type: "string",
            },
          ],
          name: "ProfileUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "cardId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "cardName",
              type: "string",
            },
          ],
          name: "VirtualCardCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "cardId",
              type: "uint256",
            },
          ],
          name: "VirtualCardDeactivated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "cardId",
              type: "uint256",
            },
          ],
          name: "VirtualCardUpdated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "addressToENS",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "contractOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "ensHash",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "ensName",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "displayName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "bio",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "avatar",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "website",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "twitter",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "github",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "discord",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "telegram",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "updatedAt",
                  type: "uint256",
                },
              ],
              internalType: "struct YourContract.UserProfile",
              name: "profile",
              type: "tuple",
            },
          ],
          name: "createProfile",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "cardName",
              type: "string",
            },
            {
              internalType: "string",
              name: "cardNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "cardType",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "spendingLimit",
              type: "uint256",
            },
          ],
          name: "createVirtualCard",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "cardIndex",
              type: "uint256",
            },
          ],
          name: "deactivateVirtualCard",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "ensHash",
              type: "bytes32",
            },
          ],
          name: "getProfile",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "displayName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "bio",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "avatar",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "website",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "twitter",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "github",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "discord",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "telegram",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "updatedAt",
                  type: "uint256",
                },
              ],
              internalType: "struct YourContract.UserProfile",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
          ],
          name: "getProfileByAddress",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "displayName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "bio",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "avatar",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "website",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "twitter",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "github",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "discord",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "telegram",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "updatedAt",
                  type: "uint256",
                },
              ],
              internalType: "struct YourContract.UserProfile",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalProfiles",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
          ],
          name: "getUserCardCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
          ],
          name: "getUserVirtualCards",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "cardId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "cardName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cardNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expiryDate",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cardType",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "spendingLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "currentSpend",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
              ],
              internalType: "struct YourContract.VirtualCard[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextCardId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "registeredENS",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "ensHash",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "ensName",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "displayName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "bio",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "avatar",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "website",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "twitter",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "github",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "discord",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "telegram",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "updatedAt",
                  type: "uint256",
                },
              ],
              internalType: "struct YourContract.UserProfile",
              name: "profile",
              type: "tuple",
            },
          ],
          name: "updateProfile",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "cardIndex",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cardName",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "spendingLimit",
              type: "uint256",
            },
          ],
          name: "updateVirtualCard",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userCardCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "userProfiles",
          outputs: [
            {
              internalType: "string",
              name: "displayName",
              type: "string",
            },
            {
              internalType: "string",
              name: "bio",
              type: "string",
            },
            {
              internalType: "string",
              name: "avatar",
              type: "string",
            },
            {
              internalType: "string",
              name: "website",
              type: "string",
            },
            {
              internalType: "string",
              name: "twitter",
              type: "string",
            },
            {
              internalType: "string",
              name: "github",
              type: "string",
            },
            {
              internalType: "string",
              name: "discord",
              type: "string",
            },
            {
              internalType: "string",
              name: "telegram",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "updatedAt",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userVirtualCards",
          outputs: [
            {
              internalType: "uint256",
              name: "cardId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cardName",
              type: "string",
            },
            {
              internalType: "string",
              name: "cardNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "expiryDate",
              type: "string",
            },
            {
              internalType: "string",
              name: "cardType",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "spendingLimit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "currentSpend",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 1,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
